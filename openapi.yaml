openapi: 3.1.0
info:
  title: WISdoM 2.0 Authorization Service
  description: |
    Reworked authorization service which now is based on Python and [FastAPI by
    Tiangolo](https://fastapi.tiangolo.com/).
    Furthermore this service will also be able to validate access
    tokens via AMQP messages. This feature will not be documented here since
    there is no real possibility for this. You can read more about this feature
    in the README.md
  version: 2.0.0

tags:
  - name: Login Operations
  - name: User Operations
  - name: Scope Operations
  - name: Role Operations
  - name: Miscellaneous

components:
  schemas:
    AuthorizationBody:
      type: object
      required:
        - grant_type
      discriminator:
        propertyName: grant_type
      properties:
        grant_type:
          type: string
          title: OAuth2.0 Grant Type
          description: The grant type used to receive a new token set
        scope:
          type: string
    CredentialAuthorization:
      description: Receive a new token set via an account credential
      allOf:
        - $ref: '#/components/schemas/AuthorizationBody'
        - type: object
          properties:
            username:
              type: string
              description: The username part of the account credentials
              minLength: 1
            password:
              type: string
              description: The password part of the account credentials
          required:
            - username
            - password
      example:
        grant_type: password
        username: example-user
        password: example-password

    RefreshTokenAuthorization:
      description: Body to receive a new token set via a refresh token
      allOf:
        - $ref: '#/components/schemas/AuthorizationBody'
        - type: object
          properties:
            refresh_token:
              type: string
              description: The refresh token issued beforehand
              pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
          required:
            - refresh_token
      example:
        grant_type: refresh_token
        refresh_token: 00000000-0000-0000-0000-000000000000


paths:
  /:
    get:
      tags:
        - Miscellaneous
      summary: Check the availability of this service
      responses:
        204:
          description: The service is available
    options:
      tags:
        - Miscellaneous
      summary: Get information about how to query the service
      responses:
        200:
          description: This OpenAPI specification
  /oauth/token:
    post:
      requestBody:
        description: Login Form
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CredentialAuthorization'
                - $ref: '#/components/schemas/RefreshTokenAuthorization'
              discriminator:
                propertyName: grant_type
                mapping:
                  password: '#/components/schemas/CredentialAuthorization'
                  refresh_token: '#/components/schemas/RefreshTokenAuthorization'

      responses:
        200:
          description: The user was authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The access token which shall be used as Bearer Token
                    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
                  token_type:
                    type: string
                    description: Type of the access token
                  expires_in:
                    type: integer
                    description: Time in seconds until the token expires
                  refresh_token:
                    type: string
                    description: The refresh token which may be used to get another token set
                    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
                  scope:
                    type: string
                    description: The scopes the tokens in the response are valid for
                example:
                  access_token: 00000000-0000-0000-0000-000000000001
                  token_type: bearer
                  expires_in: 3600
                  refresh_token: 00000000-0000-0000-0000-000000000000
                  scope: admin me